version: 2
jobs:
  build_node_v10:
    docker:
      - image: circleci/node:10-browsers
    working_directory: ~/repo
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v10-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v10-dependencies-
      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: v10-dependencies-{{ checksum "package.json" }}
      - run: npm test
      - run: npm run lint
      - run: npm run codecov

  build_node_v12:
    docker:
      - image: circleci/node:12-browsers
    working_directory: ~/repo_v12
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v12-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v12-dependencies-
      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: v12-dependencies-{{ checksum "package.json" }}
      - run: npm test

  publish_docs:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v10-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v10-dependencies-
      - add_ssh_keys
      - run: npm run publish-docs

  publish_to_npm:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v10-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v10-dependencies-
      - run: mv npmrc-env .npmrc
      - run:
          name: Publish to NPM (only if a new version has been tagged)
          command: if [ "$(npm show ilp-protocol-stream version)" != "$(npm ls --depth=-1 2>/dev/null | head -1 | cut -f 1 -d " " | cut -f 2 -d @)" ] ; then npm publish ; fi

workflows:
  version: 2
  build_and_publish:
    jobs:
      - build_node_v10:
          filters:
            branches:
              ignore:
                - gh-pages
      - build_node_v12:
          filters:
            branches:
              ignore:
                - gh-pages
      - publish_docs:
          requires:
            - build_node_v10
            - build_node_v12
          filters:
            branches:
              only:
                - master
      - publish_to_npm:
          requires:
            - build_node_v10
            - build_node_v12
          filters:
            branches:
              only:
                - master
