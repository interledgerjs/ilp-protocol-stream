version: 2
jobs:
  build:
    docker:
      - image: circleci/node:8

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: npm test

      # lint
      - run: npm run lint

      # upload coverage to codecov.io
      - run: npm run codecov

  publish_docs:
    docker:
      - image: circleci/node:8

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - add_ssh_keys

      - run: npm run publish-docs

  publish_to_npm:
    docker:
      - image: circleci/node:8

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: mv npmrc-env .npmrc

      - run:
          name: Publish to NPM (only if a new version has been tagged)
          command: if [ "$(npm show ilp-protocol-stream version)" != "$(npm ls --depth=-1 2>/dev/null | head -1 | cut -f 1 -d " " | cut -f 2 -d @)" ] ; then npm publish ; fi


workflows:
  version: 2
  build_and_publish:
    jobs:
      - build:
          filters:
            branches:
              ignore:
                - gh-pages
      - publish_docs:
          requires:
            - build
          filters:
            branches:
              only:
                - master
      - publish_to_npm:
          requires:
            - build
          filters:
            branches:
              only:
                - master
